<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="generator" content="pandoc">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes">
  <title></title>
  <style type="text/css">code{white-space: pre;}</style>
  <!--[if lt IE 9]>
    <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
  <![endif]-->
  <link rel="stylesheet" href="jd.css">
</head>
<body>
<p><div id="nav"><a href="Index.htm">Jd</a>&nbsp;|&nbsp;<a href="Overview.htm">Overview</a>&nbsp;|&nbsp;<a href="General.htm">General</a>&nbsp;|&nbsp;<a href="Ops.htm">Ops</a>&nbsp;|&nbsp;<a href="Admin.htm">Admin</a>&nbsp;|&nbsp;<a href="Guide.htm">Guide</a>&nbsp;|&nbsp;<a href="Technical.htm">Technical</a>&nbsp;|&nbsp;<a href="Release.htm">Release</a>&nbsp;|&nbsp;<a href="License.htm">License</a>&nbsp;|&nbsp;<a href="Support.htm">Support</a></div></p>
<p>CSVFOLDER__ - implicit arg - path for csv and related files<br />csv files can be on a different drive than Jd tables<br />csv intermediate files are on the same drive as Jd tables<br />f.csv metadata in f.cdefs<br /> See tutorial csv.</p>
<h2 id="cdefs-file-format-csv-metadata">cdefs file format (csv metadata)</h2>
<p>eol delimited column definitions<br />  col name type [width]<br />   col is 1 origin column number in csv file<br />   name is column name (used in file/folder names)<br />   type<br />    boolean, int, float, byte, varbyte<br />    edate - 2014-01-02<br />    edatetime - 2014-01-02T03:04:05<br />    edatetimem - 2014-01-02T03:04:05,123<br />    edatetimen - 2014-01-02T03:04:05,123456789<br />    date - yyyy/mm/dd<br />    datex - dd/mm/yyyy<br />    datetime - yyyy/mm/dd hh:mm:ss<br />    datetimex - dd/mm/yyyy hh:mm:ss<br />   width<br />    must not be 0<br />    byte column width - elided is list<br />    varbyte average (file allocation - elide for default)<br />    numeric column width<br />     - elided is list - value ignored and set as 1+#CSTITCH<br /> options colsep rowsep quoted escaped headers epoch<br />  colsep - 1 char or BLANK or TAB or AUTO<br />  rowsep  - 1 or 2 chars or CR or LF or CRLF or AUTO<br />  quoted  - 1 char (usually &quot;) or NO<br />  escaped  - 1 char (usually \) or NO - \0 \b \t \n \r \&quot; \' \\<br />  headers  - 0 up to 10 header rows to skip<br />  epoch  - iso8601-char or iso8601-int<br /></p>
<h2 id="csvcdefs">csvcdefs</h2>
<p>csvcdefs [options] csvfile - create x.cdefs from x.csv<br />  /replace - replace existing cdefs file<br />  /c - x.cnames file used for column names<br />  /h n - n headers<br />  /u - default col names - written to x.cnames<br />  /v w - byte col wider than w treated as varbyte - default 200<br />  col types determined by examining probed rows</p>
<p>probed rows are the first 5000 rows</p>
<p>/u m creates default .cname file with m cols<br />  cols at end with no data in probed rows are removed</p>
<h2 id="csvdump">csvdump</h2>
<p>csvdump [options]<br />  /e - write epoch cols as ints (cdefs option iso8601-int)<br />  csvwr all tables<br />  db files (admin.ijs) are also written</p>
<h2 id="csvrd">csvrd</h2>
<p>csvrd [options] csvfile table<br />  /rows n - read n rows - default all<br />  /cdefs - read cdefs from implicit arg CDEFSFILE<br /></p>
<h2 id="csvprobe">csvprobe</h2>
<p>csvprobe [options] csvfile<br />  /replace - replace existing cdefs file<br />   - create cdefs file with csvcdefs /h 0 /u<br />   - load 12 rows into temp table csvprobe<br />    - read table<br /> examine table to determine /h parameter to use for csvcdefs and make sure rowsep, colsep, etc. make sense</p>
<h2 id="csvreport">csvreport</h2>
<p>csvreport [options] [0 or more tables]<br />  /f does full report rather than summary<br />  report results of last csvrd for tables<br /></p>
<h2 id="csvrestore">csvrestore</h2>
<p>csvrestore<br />  csvrd all tables<br />  db files (e.g. admin.ijs) are restored<br /></p>
<h2 id="csvscan">csvscan</h2>
<p>csvscan csvfile</p>
<p>uses cdefs options to scan entire file<br />gets max widths for all cols<br />adjusts cdefs file byte types to have max col width<br /></p>
<h2 id="csvwr">csvwr</h2>
<p>csvwr [options] csvfile table [0 or more col names] [where clause]<br />  /e - write epoch cols as ints (cdefs option iso8601-int)<br />  /h1 - header with col names<br />  /w - final arg is where clause<br />  /combine - ptable parts written as single file</p>
<p>  all cols written if none are named<br />  where clause after * to avoid blank/quote problems</p>
</body>
</html>
